[% WRAPPER layout.tt title="Build $id of job $project.name:$jobset.name:$job.name" %]
[% PROCESS common.tt %]
[% PROCESS "product-list.tt" %]
[% USE HTML %]
[% USE Date %]

[%
isAggregate = constituents.size > 0;
busy = 0;
FOR step IN steps; IF step.busy; busy = 1; END; END;
%]

[% BLOCK renderOutputs %]
  [% start=1; FOREACH output IN outputs %]
    [% IF !start %],<br/>[% END; start=0; output.path %]
  [% END %]
[% END %]

[% BLOCK renderBuildSteps %]
  <table class="table table-striped table-condensed clickable-rows">
    <thead>
      <tr><th>Nr</th><th>What</th><th>Duration</th><th>Machine</th><th>Status</th></tr>
    </thead>
    <tbody>
      [% FOREACH step IN steps %]
        [% IF ( type == "All" ) || ( type == "Failed" && step.status != 0 ) || ( type == "Running" && step.busy == 1 ) %]
          [% has_log = seen.${step.drv_path} ? 0 : buildStepLogExists(step);
             seen.${step.drv_path} = 1;
             log = c.uri_for('/build' build.id 'nixlog' step.stepnr); %]
          <tr>
            <td>[% step.stepnr %]</td>
            <td>
              [% IF step.type == 0 %]
                Build of <tt>[% INCLUDE renderOutputs outputs=step.build_step_outputs %]</tt>
              [% ELSE %]
                Substitution of <tt>[% INCLUDE renderOutputs outputs=step.build_step_outputs %]</tt>
              [% END %]
            </td>
            <td>
              [% IF step.busy == 0;
                   IF step.stop_time;
                     INCLUDE renderDuration duration = step.stop_time - step.start_time;
                   ELSE;
                     %]<em>n/a</em>[%
                   END;
                 ELSIF build.finished;
                   INCLUDE renderDuration duration = build.stop_time - step.start_time;
                 ELSE;
                   INCLUDE renderDuration duration = curTime - step.start_time;
                 END %]
            </td>
            <td>[% IF step.busy == 1 || ((step.machine || step.start_time) && (step.status == 0 || step.status == 1 || step.status == 3 || step.status == 7)); INCLUDE renderMachineName machine=step.machine; ELSE; "<em>n/a</em>"; END %]</td>
            <td>
              [% IF step.busy == 1 %]
                <strong>Building</strong>
              [% ELSIF step.status == 0 %]
                Succeeded
              [% ELSIF step.status == 3 %]
                <span class="error"><strong>Aborted</strong>[% IF step.error_msg %]: [% HTML.escape(step.error_msg); END %]</span>
              [% ELSIF step.status == 7 %]
                <span class="error">Timed out</span>
              [% ELSIF step.status == 8 %]
                <span class="error">Cached failure</span>
              [% ELSIF step.status == 9 %]
                <span class="error">Unsupported system type</span>
              [% ELSIF step.status == 10 %]
                <span class="error">Log limit exceeded</span>
              [% ELSIF step.status == 11 %]
                <span class="error">Output limit exceeded</span>
              [% ELSIF step.error_msg %]
                <span class="error">Failed: [% HTML.escape(step.error_msg) %]</span>
              [% ELSE %]
                <span class="error">Failed</span>
              [% END %]
              [%%] [%+ IF has_log; INCLUDE renderLogLinks url=log inRow=1; END %]
              [%+ IF step.propagated_from; %](propagated from [% INCLUDE renderBuildIdLink id=step.propagated_from.get_column('id') %])[% END %]
            </td>
          </tr>
        [% END %]
      [% END %]
    </tbody>
  </table>
[% END %]

<ul class="nav nav-tabs">
  <li class="dropdown">
    <a class="dropdown-toggle actions" data-toggle="dropdown" href="#">
      Actions
      <b class="caret"></b>
    </a>
    <ul class="dropdown-menu">
      [% IF build.nix_expr_input %]
        <li><a href="#reproduce" data-toggle="modal">Reproduce locally</a></li>
      [% END %]
      [% IF c.user_exists %]
        [% IF available %]
          [% IF build.keep %]
            <li><a href="[% c.uri_for('/build' build.id 'keep' 0) %]">Unkeep</a></li>
          [% ELSE %]
            <li><a href="[% c.uri_for('/build' build.id 'keep' 1) %]">Keep</a></li>
          [% END %]
        [% END %]
        [% IF build.finished %]
          <li><a href="[% c.uri_for('/build' build.id 'restart') %]">Restart</a></li>
        [% ELSE %]
          <li><a href="[% c.uri_for('/build' build.id 'cancel') %]">Cancel</a></li>
          <li><a href="[% c.uri_for('/build' build.id 'bump') %]">Bump up</a></li>
        [% END %]
        [% IF available && project.releases %]
          [% INCLUDE menuItem
            uri = "#add-to-release"
            title = "Add to release"
            modal = 1 %]
        [% END %]
      [% END %]
    </ul>
  </li>

  <li class="active"><a href="#tabs-summary" data-toggle="tab">Summary</a></li>
  [% IF isAggregate %]<li><a href="#tabs-constituents" data-toggle="tab">Constituents</a></li>[% END %]
  <li><a href="#tabs-details" data-toggle="tab">Details</a></li>
  <li><a href="#tabs-buildinputs" data-toggle="tab">Inputs</a></li>
  [% IF steps %]<li><a href="#tabs-buildsteps" data-toggle="tab">Build steps</a></li>[% END %]
  [% IF build.dependents %]<li><a href="#tabs-usedby" data-toggle="tab">Used by</a></li>[% END%]
  [% IF drvAvailable %]<li><a href="#tabs-build-deps" data-toggle="tab">Build dependencies</a></li>[% END %]
  [% IF available %]<li><a href="#tabs-runtime-deps" data-toggle="tab">Runtime dependencies</a></li>[% END %]
</ul>

<div id="generic-tabs" class="tab-content">

  <div id="tabs-summary" class="tab-pane active">

    <table>
      <tr>
        <td>
          [% INCLUDE renderBuildStatusIcon size=128, build=build %]
        </td>
        <td>
          <table class="info-table">
            <tr>
              <th>Build ID:</th>
              <td>[% build.id %]</td>
            </tr>
            <tr>
              <th>Status:</th>
              <td>
                [% INCLUDE renderStatus build=build icon=0 busy=busy %]
                [% IF isAggregate;
                     nrConstituents = 0;
                     nrFinished = 0;
                     nrFailedConstituents = 0;
                     FOREACH b IN constituents;
                       nrConstituents = nrConstituents + 1;
                       IF b.finished; nrFinished = nrFinished + 1; END;
                       IF b.finished && b.build_status != 0; nrFailedConstituents = nrFailedConstituents + 1; END;
                     END;
                %];
                  [%+ IF nrFinished == nrMembers && nrFailedConstituents == 0 %]
                    all [% nrConstituents %] constituent builds succeeded
                  [% ELSE %]
                    [% nrFailedConstituents %] out of [% nrConstituents %] constituent builds failed
                    [% IF nrFinished < nrConstituents %]
                      ([% nrConstituents - nrFinished %] still pending)
                    [% END %]
                  [% END %]
                [% END %]
              </td>
            </tr>
            <tr>
              <th>System:</th>
              <td><tt>[% build.system %]</tt></td>
            </tr>
            [% IF build.release_name %]
              <tr>
                <th>Release name:</th>
                <td><tt>[% HTML.escape(build.release_name) %]</tt></td>
              </tr>
            [% ELSE %]
              <tr>
                <th>Nix name:</th>
                <td><tt>[% build.nix_name %]</tt></td>
              </tr>
            [% END %]
            [% IF eval %]
              <tr>
                <th>Part of:</th>
                <td>
                  <a href="[% c.uri_for(c.controller('JobsetEval').action_for('view'), [eval.id]) %]">evaluation [% eval.id %]</a>
                  [% IF nrEvals > 1 +%] (and <a href="[% c.uri_for('/build' build.id 'evals') %]">[% nrEvals - 1 %] others</a>)[% END %]
                </td>
              </tr>
            [% END %]
            [% IF build.is_cached_build %]
              <tr>
                <th>Cached from:</th>
                <td>[% IF cachedBuild; INCLUDE renderFullBuildLink build=cachedBuild; ELSE %]<em>unknown</em>[% END %]</td>
              </tr>
            [% END %]
            [% IF (!isAggregate || !build.is_channel) && build.finished; actualBuild = build.is_cached_build ? cachedBuild : build %]
              [% IF actualBuild %]
                <tr>
                  <th>Duration:</th>
                  <td>[% INCLUDE renderDuration duration = actualBuild.stop_time - actualBuild.start_time %]</td>
                </tr>
              [% END %]
              <tr>
                <th>Finished at:</th>
                <td>[% INCLUDE renderDateTime timestamp = build.stop_time; %]</td>
              </tr>
            [% END %]
            [% IF (!isAggregate || !build.is_channel) && buildLogExists(build) %]
              <tr>
                <th>Logfile:</th>
                <td>
                  <a class="btn btn-mini" href="[% c.uri_for('/build' build.id 'log') %]">pretty</a>
                  <a class="btn btn-mini" href="[% c.uri_for('/build' build.id 'log' 'raw') %]">raw</a>
                  <a class="btn btn-mini" href="[% c.uri_for('/build' build.id 'log' 'tail-reload') %]">tail</a>
                </td>
              </tr>
            [% END %]
          </table>
        </td>
      </tr>
    </table>

    [% IF build.is_channel || (build.build_products && !isAggregate) %]

      <h3>Build products</h3>

      [% IF !available %]
        <p class="error">Note: this build is no longer available.</p>
      [% END %]

      [% INCLUDE renderProductList latestRoot=['/job' build.project.name build.jobset.name build.job.name 'latest'] %]

    [% END %]

    [% IF busy %]
      <h3>Running build steps</h3>
      [% INCLUDE renderBuildSteps type="Running" %]
    [% END %]

    [% IF build.finished %]

      [% IF steps && build.build_status != 0 && build.build_status != 6 %]
        <h3>Failed build steps</h3>
        [% INCLUDE renderBuildSteps type="Failed" %]
      [% END %]

      [% IF otherEval %]
        <h3>Changes</h3>
        [% INCLUDE renderInputDiff inputs2=eval.jobset_eval_inputs inputs1=otherEval.jobset_eval_inputs %]
      [% END %]

      [% IF prevSuccessfulBuild %]
        <h3>Previous builds</h3>
        <table class="table table-striped table-condensed">
          <thead>
            <th>Last successful build [% INCLUDE renderDateTime timestamp = prevSuccessfulBuild.timestamp %]</th>
            [% IF prevSuccessfulBuild && firstBrokenBuild && firstBrokenBuild.id != build.id %]
              <th>First broken build [% INCLUDE renderDateTime timestamp = firstBrokenBuild.timestamp %]
                <a class="btn btn-mini" href="[% c.uri_for(c.controller('API').action_for('logdiff') prevSuccessfulBuild.id firstBrokenBuild.id ) %]">log diff</a>
              </th>
            [% END %]
            <th>This build [% INCLUDE renderDateTime timestamp = build.timestamp %]
              <a class="btn btn-mini" href="[% c.uri_for(c.controller('API').action_for('logdiff') prevSuccessfulBuild.id build.id) %]">log diff</a>
            </th>
          </thead>
          <tr>
            <td valign="center">[% INCLUDE renderBuildStatusIcon build=prevSuccessfulBuild size=32 %] [% INCLUDE renderBuildLink build=prevSuccessfulBuild %]</td>
            [% IF prevSuccessfulBuild && firstBrokenBuild && firstBrokenBuild.id != build.id %]
              <td valign="center">[% INCLUDE renderBuildStatusIcon build=firstBrokenBuild size=32 %] [% INCLUDE renderBuildLink build=firstBrokenBuild %]</td>
            [% END %]
            <td>[% INCLUDE renderBuildStatusIcon build=build size=32 %] [% INCLUDE renderBuildLink build=build %]</td>
          </tr>
          <tr>
            <td></td>
            [% IF prevSuccessfulBuild && firstBrokenBuild && firstBrokenBuild.id != build.id %]
              <td>[% INCLUDE renderInputDiff inputs1=prevSuccessfulBuild.inputs inputs2=firstBrokenBuild.inputs %]</td>
            [% END %]
          </tr>
        </table>
      [% END %]

    [% END %]

  </div>

  [% IF isAggregate %]

    <div id="tabs-constituents" class="tab-pane">

      <p>This build is an aggregate of the following builds:</p>

      [% INCLUDE renderBuildList builds=constituents hideProjectName=1 hideJobsetName=1 %]

    </div>

  [% END %]

  <div id="tabs-details" class="tab-pane">

    <table class="info-table">
      <tr>
        <th>Queued at:</th>
        <td>[% INCLUDE renderDateTime timestamp = build.timestamp %]</td>
      </tr>
      [% IF build.finished && !build.is_cached_build %]
        <tr>
          <th>Build started:</th>
          <td>[% INCLUDE renderDateTime timestamp = build.start_time %]</td>
        </tr>
        <tr>
          <th>Build finished:</th>
          <td>[% INCLUDE renderDateTime timestamp = build.stop_time %]</td>
        </tr>
      [% END %]
      [% IF !build.finished %]
        <tr>
          <th>Priority:</th>
          <td>[% build.priority %]</td>
        </tr>
      [% END %]
      [% IF build.nix_expr_input %]
        <tr>
          <th>Nix expression:</th>
          <td>file <tt>[% HTML.escape(build.nix_expr_path) %]</tt> in input <tt>[% HTML.escape(build.nix_expr_input) %]</tt></td>
        </tr>
      [% END %]
      <tr>
        <th>Nix name:</th>
        <td><tt>[% build.nix_name %]</tt></td>
      </tr>
      <tr>
        <th>Short description:</th>
        <td>[% IF build.description %][% HTML.escape(build.description) %][% ELSE %]<em>not given</em>[% END %]</td>
      </tr>
      <tr>
        <th>License:</th>
        <td>[% IF build.license %][% HTML.escape(build.license) %][% ELSE %]<em>not given</em>[% END %]</td>
      </tr>
      <tr>
        <th>Homepage:</th>
        <td>[% IF build.homepage %]<a [% HTML.attributes(href => build.homepage) %]>[% HTML.escape(build.homepage) %]</a>[% ELSE %]<em>not given</em>[% END %]</td>
      </tr>
      <tr>
        <th>Maintainer(s):</th>
        <td>[% IF build.maintainers %][% HTML.escape(build.maintainers) %][% ELSE %]<em>not given</em>[% END %]</td>
      </tr>
      <tr>
        <th>System:</th>
        <td><tt>[% build.system %]</tt></td>
      </tr>
      <tr>
        <th>Derivation store path:</th>
        <td><tt>[% build.drv_path %]</tt></td>
      </tr>
      <tr>
        <th>Output store paths:</th>
        <td><tt>[% INCLUDE renderOutputs outputs=build.build_outputs %]</tt></td>
      </tr>
      [% chartsURL = c.uri_for('/job' build.project.name build.jobset.name build.job.name) _ "#tabs-charts" %]
      [% IF build.finished && build.closure_size %]
        <tr>
          <th>Closure size:</th>
          <td>[% mibs(build.closure_size / (1024 * 1024)) %] MiB
            (<a href="[%chartsURL%]">history</a>)</td>
        </tr>
      [% END %]
      [% IF build.finished && build.closure_size %]
        <tr>
          <th>Output size:</th>
          <td>[% mibs(build.size / (1024 * 1024)) %] MiB
            (<a href="[%chartsURL%]">history</a>)</td>
        </tr>
      [% END %]
      [% IF build.finished && build.build_products %]
        <tr>
          <th>Availability:</th>
          <td>
            [% IF !available %]
              <em>Build output is no longer available</em>
            [% ELSIF build.keep %]
              <em>Build output will be kept permanently</em>
            [% ELSE %]
              <em>Build output is available, but may be garbage-collected</em>
            [% END %]
          </td>
        </tr>
      [% END %]
    </table>

    [% IF build.finished && build.build_metrics %]
      <h3>Metrics</h3>

      <table class="table table-small table-striped table-hover clickable-rows">
        <thead>
          <tr><th>Name</th><th>Value</th><th></th></tr>
        </thead>
        <tbody>
          [% FOREACH metric IN build.build_metrics %]
            <tr>
              <td><tt><a class="row-link" [% HTML.attributes(href => c.uri_for('/job' project.name jobset.name job.name 'metric' metric.name)) %]">[%HTML.escape(metric.name)%]</a></tt></td>
              <td style="text-align: right">[%metric.value%]</td>
              <td>[%metric.unit%]</td>
            </tr>
          [% END %]
        </tbody>
      </table>
    [% END %]

  </div>

  <div id="tabs-buildinputs" class="tab-pane">

    [% IF build.inputs && build.inputs.size > 0 %]

      [% INCLUDE renderInputs inputs=build.inputs %]

    [% ELSIF eval %]

      [% INCLUDE renderInputs inputs=eval.jobset_eval_inputs %]

    [% END %]

  </div>

  [% IF steps %]
    <div id="tabs-buildsteps" class="tab-pane">
      [% INCLUDE renderBuildSteps type="All" %]
    </div>
  [% END %]

  [% IF build.dependents %]
    <div id="tabs-usedby" class="tab-pane">

      <p>The following builds have used this build as an input:</p>

      <table class="table table-condensed table-striped">
        <thead>
          <tr><th>Build</th><th>Input name</th><th>System</th><th>Timestamp</th></tr>
        </thead>
        <tbody>
          [% FOREACH input IN build.dependents %]
            <tr>
              <td>[% INCLUDE renderFullBuildLink build=input.build %]</td>
              <td><tt>[% input.name %]</tt></td>
              <td><tt>[% input.build.system %]</tt></td>
              <td>[% INCLUDE renderDateTime timestamp = input.build.timestamp %]</td>
            </tr>
          [% END %]
        </tbody>
      </table>
    </div>
  [% END %]

  [% IF drvAvailable %]
    [% INCLUDE makeLazyTab tabName="tabs-build-deps" uri=c.uri_for('/build' build.id 'build-deps') %]
  [% END %]

  [% IF available %]
    [% INCLUDE makeLazyTab tabName="tabs-runtime-deps" uri=c.uri_for('/build' build.id 'runtime-deps') %]
  [% END %]

</div>


[% IF c.user_exists && available && project.releases %]
<div id="add-to-release" class="modal hide fade" tabindex="-1" role="dialog" aria-hidden="true">
  <form class="form-horizontal" action="[% c.uri_for('/build' build.id 'add-to-release') %]" method="post">
    <div class="modal-body">
      <div class="control-group">
        <label class="control-label">Add to release</label>
        <div class="controls">
          <select class="span2" name="name">
            [% FOREACH r IN project.releases %]
            <option>[% HTML.escape(r.name) %]</option>
            [% END %]
          </select>
        </div>
      </div>
    </div>
    <div class="modal-footer">
      <button type="submit" class="btn btn-primary">Add</button>
      <button class="btn" data-dismiss="modal" aria-hidden="true">Cancel</button>
    </div>
  </form>
</div>
[% END %]


<div id="reproduce" class="modal hide fade" tabindex="-1" role="dialog" aria-hidden="true">
  [% url = c.uri_for('/build' build.id 'reproduce') %]

  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h3>Reproduce this build</h3>
  </div>

  <div class="modal-body">

    <p>You can reproduce this build on your own machine by downloading
    <a [% HTML.attributes(href => url) %]>a script</a> that checks out
    all inputs of the build and then invokes Nix to perform the build.
    This script requires that you have Nix on your system.</p>

    <p>To download and execute the script from the command line, run the
    following command:</p>

<pre>
<span class="shell-prompt">$ </span>bash <(curl <a [% HTML.attributes(href => url) %]>[% HTML.escape(url) %]</a>)
</pre>

  </div>

  <div class="modal-footer">
    <a href="#" class="btn btn-primary" data-dismiss="modal">Close</a>
  </div>
</div>


[% END %]
