[% WRAPPER layout.tt title="Jobset $project.name:$jobset.name" %]
[% PROCESS common.tt %]
[% USE format %]


[% BLOCK renderPropertyValue %]
  [% SWITCH spec.type %]
  [% CASE "bool" %]
    [% IF value %]
    <img src="[% c.uri_for("/static/images/checkmark_16.png") %]"
         alt="enabled" />
    [% ELSE %]
    <img src="[% c.uri_for("/static/images/error_16.png") %]"
         alt="disabled" />
    [% END %]
  [% CASE "attrset" %]
    <dl class="properties">
      [% FOREACH key IN value.keys %]
      <dt>[% HTML.escape(key) %]</dt>
      <dd>[% HTML.escape(value.$key) %]</dd>
      [% END %]
    </dl>
  [% CASE DEFAULT %]
    [% HTML.escape(value) %]
  [% END %]
[% END %]


[% BLOCK renderProperties %]
  [% IF spec.exists("singleton") %]
    [% INCLUDE renderPropertyValue spec=spec.singleton
                                   value=values.value %]
  [% ELSE %]
    <dl class="properties">
      [% FOREACH key IN values.keys.sort %]
      <dt>[% HTML.escape(spec.properties.$key.label or key.ucfirst) %]</dt>
      <dd>[% INCLUDE renderPropertyValue spec=spec.properties.$key
                                         value=values.$key %]</dd>
      [% END %]
    </dl>
  [% END %]
[% END %]


[% BLOCK renderJobsetInput %]
  <tr class="input [% extraClass %]" [% IF id %]id="[% id %]"[% END %]>
    <td>
      <var class="jobset-input">[% HTML.escape(input.name) %]</var>
    </td>
    <td>
      [% INCLUDE renderSelection curValue=input.type param="$baseName-type" options=inputTypeNames %]
    </td>
    <td class="inputalts" id="[% baseName %]">
      [% INCLUDE renderProperties spec=inputTypes.${input.type}
                                  values=input.properties %]
    </td>
  </tr>
[% END %]


[% BLOCK renderJobsetInputs %]
  <h3>Inputs</h3>
  <table class="table table-striped table-condensed">
    <thead>
      <tr><th>Input name</th><th>Type</th><th>Properties</th></tr>
    </thead>
    <tbody class="inputs">
      [% FOREACH input IN jobset.jobset_inputs %]
        [% INCLUDE renderJobsetInput input=input baseName="input-$input.name" %]
      [% END %]
    </tbody>
  </table>
[% END %]


<ul class="nav nav-tabs">
  [% IF c.user_exists %]
    <li class="dropdown">
      <a class="dropdown-toggle" data-toggle="dropdown" href="#">
        Actions
        <b class="caret"></b>
      </a>
      <ul class="dropdown-menu">
        [% UNLESS project.declfile %]
        [% INCLUDE menuItem title="Edit configuration" icon="icon-edit" uri=c.uri_for(c.controller('Jobset').action_for('edit'), c.req.captures) %]
        [% INCLUDE menuItem title="Delete this jobset" icon="icon-trash" uri="javascript:deleteJobset()" %]
        [% INCLUDE menuItem title="Clone this jobset" uri=c.uri_for(c.controller('Jobset').action_for('edit'), c.req.captures, { cloneJobset => 1 }) %]
        [% END %]
        [% INCLUDE menuItem title="Evaluate this jobset" uri="javascript:confirmEvaluateJobset()" %]
      </ul>
    </li>
  [% END %]

  <li class="active"><a href="#tabs-evaluations" data-toggle="tab">Evaluations</a></li>
  [% IF jobset.error_msg || jobset.fetch_error_msg %]
    <li><a href="#tabs-errors" data-toggle="tab"><span class="text-warning">Evaluation errors</span></a></li>
  [% END %]
  <li><a href="#tabs-jobs" data-toggle="tab">Jobs</a></li>
  <li><a href="#tabs-configuration" data-toggle="tab">Configuration</a></li>
  <li><a href="#tabs-links" data-toggle="tab">Links</a></li>
  <li><a href="#tabs-channels" data-toggle="tab">Channels</a></li>
</ul>

<div id="generic-tabs" class="tab-content">

  <div id="tabs-evaluations" class="tab-pane active">

    <table class="info-table">
      <tr>
        <th>Last checked:</th>
        <td>
          [% IF jobset.last_checked_time %]
            [% INCLUDE renderDateTime timestamp = jobset.last_checked_time %], [% IF jobset.error_msg || jobset.fetch_error_msg %]<em class="text-warning">with errors!</em>[% ELSE %]<em>no errors</em>[% END %]
          [% ELSE %]
            <em>never</em>
          [% END %]
        </td>
      </tr>
      <tr>
        <th>Last evaluation:</th>
        <td>
          [% IF latestEval %]
            [% INCLUDE renderDateTime timestamp = latestEval.timestamp %]
          [% ELSE %]
            <em>never</em>
          [% END %]
        </td>
      </tr>
      [% IF jobset.trigger_time %]
      <tr>
        <th>Evaluation pending since:</th>
        <td>[% INCLUDE renderDateTime timestamp = jobset.trigger_time %]</td>
      </tr>
      [% END %]
    </table>

    <br/>

    [% IF evals.size() > 0 %]
      [% INCLUDE renderEvals linkToAll=c.uri_for(c.controller('Jobset').action_for('evals'), [project.name, jobset.name]) %]
    [% END %]

  </div>

  [% IF jobset.error_msg || jobset.fetch_error_msg %]
    <div id="tabs-errors" class="tab-pane">
      <p>Errors occurred at [% INCLUDE renderDateTime timestamp=jobset.error_time %].</p>
      <pre class="alert alert-error">[% HTML.escape(jobset.fetch_error_msg || jobset.error_msg) %]</pre>
    </div>
  [% END %]

  <div id="tabs-configuration" class="tab-pane">

    <table class="info-table">
      <tr>
        <th>State:</th>
        <td>[% IF jobset.enabled == 0; "Disabled"; ELSIF jobset.enabled == 1; "Enabled"; ELSIF jobset.enabled == 2; "One-shot"; END %]</td>
      </tr>
      <tr>
        <th>Description:</th>
        <td>[% HTML.escape(jobset.description) %]</td>
      </tr>
      <tr>
        <th>Nix expression:</th>
        <td>
          <tt>[% HTML.escape(jobset.nix_expr_path) %]</tt> in input
          <tt>[% HTML.escape(jobset.nix_expr_input) %]</tt>
        </td>
      </tr>
      <tr>
        <th>Check interval:</th>
        <td>[% jobset.check_interval || "<em>disabled</em>"  %]</td>
      </tr>
      <tr>
        <th>Scheduling shares:</th>
        <td>[% jobset.scheduling_shares %] [% IF totalShares %] ([% f = format("%.2f"); f(jobset.scheduling_shares / totalShares * 100) %]% out of [% totalShares %] shares)[% END %]</td>
      </tr>
      <tr>
        <th>Enable email notification:</th>
        <td>[% jobset.enable_email ? "Yes" : "No" %]</td>
      </tr>
      <tr>
        <th>Email override:</th>
        <td>[% HTML.escape(jobset.email_override) %]</td>
      </tr>
      <tr>
        <th>Number of evaluations to keep:</th>
        <td>[% jobset.keepnr %]</td>
      </tr>
    </table>

    [% INCLUDE renderJobsetInputs %]
  </div>

  [% INCLUDE makeLazyTab tabName="tabs-jobs" uri=c.uri_for('/jobset' project.name jobset.name "jobs-tab") %]

  <div id="tabs-links" class="tab-pane">
    <ul>
      <li><a href="[% c.uri_for(c.controller('Jobset').action_for('latest_eval'), c.req.captures) %]">Latest finished evaluation</a></li>
    </ul>
  </div>

  [% INCLUDE makeLazyTab tabName="tabs-channels" uri=c.uri_for('/jobset' project.name jobset.name "channels-tab") %]

</div>

<script>
  function confirmEvaluateJobset() {
    bootbox.confirm(
      'Are you sure you want to force evaluation of this jobset?',
      function(c) {
        if (!c) return;
        requestJSON({
          url: "[% HTML.escape(c.uri_for('/api/push', { jobsets = project.name _ ':' _ jobset.name, force = "1" })) %]",
          success: function(data) {
            bootbox.alert("The jobset has been scheduled for evaluation.");
          }
        });
      });
  };

  function deleteJobset() {
    bootbox.confirm(
      'Are you sure you want to delete this jobset?',
      function(c) {
        if (!c) return;
        redirectJSON({
          url: "[% c.uri_for(c.controller('Jobset').action_for('jobset'), c.req.captures) %]",
          type: 'DELETE'
        });
      });
  };
</script>

[% END %]
